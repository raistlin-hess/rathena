<!doctype html>
<html lang="en">

<head>
  <%- include('./partials/head'); %>
</head>

<body>
  <header>HessRO Registration Page</header>

  <main>
    <form>
      <fieldset>
        <label>
          Username
          <input type="text" name="username" placeholder="Username" minlength="6" />
        </label>
        <label>
          Password
          <input type="password" name="password" placeholder="Password" minlength="6" />
        </label>
      </fieldset>

      <button type="submit" disabled>Register User</button>
    </form>

  </main>

  <footer>
    <a href="<%-downloadClient %>" download="HessRO.rar">Download HessRO Client</a>
  </footer>

  <dialog id="success-modal">
    <article>
      <header>Success!</header>
      <main>
        <input type="text" value="" readonly />
      </main>
      <footer>
        <button>Close</button>
      </footer>
    </article>
  </dialog>

  <dialog id="failure-modal">
    <article>
      <header>Error!</header>
      <main>
        <input type="text" value="" readonly />
      </main>
      <footer>
        <button>Close</button>
      </footer>
    </article>
  </dialog>

  <script id="registration-form-script" type="application/javascript">
    const formEl = document.querySelector('form');
    const usernameEl = document.querySelector('input[name="username"]');
    const passwordEl = document.querySelector('input[type="password"]');
    const submitEl = document.querySelector('button[type="submit"]');
    const successModal = document.getElementById('success-modal');
    const failureModal = document.getElementById('failure-modal');

    formEl.addEventListener('submit', onSubmitClick);
    usernameEl.addEventListener('input', inputDebounce(onFormInputChange, 100));
    passwordEl.addEventListener('input', inputDebounce(onFormInputChange, 100));
    successModal.querySelector('button')
      .addEventListener('click', () => successModal.close());
    failureModal.querySelector('button')
      .addEventListener('click', () => failureModal.close());

    async function onSubmitClick(submitEvent) {
      submitEvent.preventDefault();
      submitEl.setAttribute('aria-busy', true);
      submitEl.setAttribute('disabled', true);

      try {
        const isValid = validateInputs();
        if(isValid) {
          await submitForm();
        } else {
          alert('Make sure your username and password are both at least 6 characters long!');
          return;
        }
      } catch(err) {
        successModal.close();
        failureModal.querySelector('input').value = err?.message ?? JSON.stringify(err);
        failureModal.showModal();
        submitEl.removeAttribute('disabled');
      } finally {
        submitEl.removeAttribute('aria-busy');
      }
    }

    function validateInputs() {
      return (usernameEl.value?.trim()?.length ?? 0) > 5 &&
        (passwordEl.value?.trim()?.length ?? 0) > 5;
    }

    async function submitForm() {
      const response = await fetch('<%-registerUserFormAction %>', {
        method: 'post',
        headers: {
          'Accept': 'applicaton/json',
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          username: usernameEl.value,
          password: passwordEl.value,
        })
      });

      const body = await response.json();
      if(response.ok) {
        failureModal.close();
        successModal.querySelector('input').value = 'User registered successfully!';
        successModal.showModal();

        formEl.reset();
        onFormInputChange();
      } else {
        throw new Error(`Error from server: ${body.error}`);
      }
    }

    function onFormInputChange() {
      const isValid = validateInputs();
      if(isValid) {
        submitEl.removeAttribute('disabled');
      } else {
        submitEl.setAttribute('disabled', true);
      }
    }

    function inputDebounce(fn, delayInMs) {
      let timeoutId = null;
      return (...args) => {
        clearTimeout(timeoutId);
        timeoutId = setTimeout(() => {
          fn(...args);
        }, delayInMs);
      };
    }
  </script>
</body>

</html>
